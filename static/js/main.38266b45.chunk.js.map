{"version":3,"sources":["components/WeatherInfo.js","components/WeatherContainer.js","config.js","components/App.js","reportWebVitals.js","index.js"],"names":["WeatherInfo","props","data","temp","humidity","desc","city","Fragment","className","WeatherContainer","useState","searchQuery","setSearchQuery","weatherData","setWeatherData","isValidZipCode","setIsValidZipCode","validateZipCode","zipCode","test","convertToFahrenheit","toFixed","placeholder","onChange","event","target","value","isValid","length","maxLength","onClick","fetch","then","response","json","console","log","main","weather","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA4BeA,EAzBK,SAACC,GACjB,MAAsCA,EAAMC,KAApCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,KAC9B,OACI,eAAC,IAAMC,SAAP,WACI,6BAAKF,IACL,0BAASG,UAAU,oBAAnB,UACI,sBAAKA,UAAU,qBAAf,UACI,sCACA,mBAAGA,UAAU,+BAAb,SAA6CF,OAEjD,sBAAKE,UAAU,qBAAf,UACI,6CACA,oBAAGA,UAAU,+BAAb,UAA6CL,EAAK,sBAAMK,UAAU,gBAAhB,qBAEtD,sBAAKA,UAAU,qBAAf,UACI,0CACA,mBAAGA,UAAU,8BAAb,SAA4CJ,cCmEjDK,MAjFf,WACE,IACA,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,CAC7CP,KAAM,KACNC,SAAU,KACVC,KAAM,KACNC,KAAM,OAJR,mBAAOO,EAAP,KAAoBC,EAApB,KAMA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAcMC,EAAkB,SAACC,GAEvB,MADY,WACCC,KAAKD,IAsBdE,EAAsB,SAACjB,GAC3B,OAAQ,KAACA,EAAO,QAAwB,IAAIkB,QAAQ,IAGtD,OACE,0BAASb,UAAU,oBAAnB,UACE,yBAAQA,UAAU,iBAAlB,UACE,yCACA,gCACE,uBACEc,YAAY,WACZd,UAAU,eACVe,SAhDgB,SAACC,GACzB,IAAIN,EAAUM,EAAMC,OAAOC,MACvBC,EAAUV,EAAgBC,GAC9BN,EAAeM,GAEXS,GAAuB,KAAZT,GAAqC,IAAnBS,EAAQC,OACvCZ,GAAkB,GAElBA,GAAkB,IAyCZa,UAAU,MAEZ,wBAAQC,QAlCO,WAChBf,GAAkC,KAAhBJ,GAGvBoB,MAAM,uDAAD,OACoDpB,EADpD,qBCrCM,qCDwCRqB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC9B,GACLiC,QAAQC,IAAIlC,GACZY,EAAe,CACbX,KAAMiB,EAAoBlB,EAAKmC,KAAKlC,MACpCC,SAAUF,EAAKmC,KAAKjC,SACpBC,KAAMH,EAAKoC,QAAQ,GAAGD,KACtB/B,KAAMJ,EAAKqC,WAoBsB/B,UAAU,iBAA3C,0BAKJ,mBAAGA,UAAU,QAAb,SAAsBO,EAAiB,GAAK,qBAC5C,yBAASP,UAAU,eAAnB,SACwB,OAArBK,EAAYV,KACX,uDACwB,mBAAGK,UAAU,iBAAb,yBAGxB,cAAC,EAAD,CAAaN,KAAMW,UElEd2B,MATf,WACE,OACE,yBAAShC,UAAU,gBAAnB,SACE,cAAC,EAAD,OCKSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38266b45.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/weather.css';\r\n\r\nconst WeatherInfo = (props) => {\r\n    const { temp, humidity, desc, city} = props.data;\r\n    return (\r\n        <React.Fragment>\r\n            <h3>{desc}</h3>\r\n            <section className='weather-data-flex'>\r\n                <div className='header-description'>\r\n                    <h4>City</h4>\r\n                    <p className='description-value city-value'>{city}</p>\r\n                </div>\r\n                <div className='header-description'>\r\n                    <h4>Temperature</h4>\r\n                    <p className='description-value temp-value'>{temp}<span className='degree-symbol'>F</span></p>\r\n                </div>\r\n                <div className='header-description'>\r\n                    <h4>Humidity</h4>\r\n                    <p className='description-value hum-value'>{humidity}</p>\r\n                </div>\r\n            </section>\r\n\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default WeatherInfo;","import React, { useState } from \"react\";\r\nimport \"../styles/weather.css\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport { MY_KEY } from \"../config.js\";\r\n\r\nfunction WeatherContainer() {\r\n  const API_KEY = MY_KEY;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [weatherData, setWeatherData] = useState({\r\n    temp: null,\r\n    humidity: null,\r\n    desc: null,\r\n    city: null,\r\n  });\r\n  const [isValidZipCode, setIsValidZipCode] = useState(true);\r\n\r\n  const updateSearchQuery = (event) => {\r\n    let zipCode = event.target.value;\r\n    let isValid = validateZipCode(zipCode);\r\n    setSearchQuery(zipCode);\r\n\r\n    if (isValid || zipCode === \"\" || isValid.length === 5) {\r\n      setIsValidZipCode(true);\r\n    } else {\r\n      setIsValidZipCode(false);\r\n    }\r\n  };\r\n\r\n  const validateZipCode = (zipCode) => {\r\n    let regex = /[0-9]{5}/;\r\n    return regex.test(zipCode);\r\n  };\r\n\r\n  const getWeatherData = () => {\r\n    if (!isValidZipCode || searchQuery === \"\") {\r\n      return;\r\n    }\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?zip=${searchQuery},us&appid=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setWeatherData({\r\n          temp: convertToFahrenheit(data.main.temp),\r\n          humidity: data.main.humidity,\r\n          desc: data.weather[0].main,\r\n          city: data.name,\r\n        });\r\n      });\r\n  };\r\n\r\n  const convertToFahrenheit = (temp) => {\r\n    return ((temp - 273.15) * (9.0 / 5.0) + 32).toFixed(0);\r\n  };\r\n\r\n  return (\r\n    <section className=\"weather-container\">\r\n      <header className=\"weather-header\">\r\n        <h3>Weather</h3>\r\n        <div>\r\n          <input\r\n            placeholder=\"Zip Code\"\r\n            className=\"search-input\"\r\n            onChange={updateSearchQuery}\r\n            maxLength=\"5\"\r\n          />\r\n          <button onClick={getWeatherData} className=\"material-icons\">\r\n            search\r\n          </button>\r\n        </div>\r\n      </header>\r\n      <p className=\"error\">{isValidZipCode ? \"\" : \"Invalid Zip Code\"}</p>\r\n      <section className=\"weather-info\">\r\n        {weatherData.temp === null ? (\r\n          <p>\r\n            No weather to display.<i className=\"material-icons\">wb_sunny</i>\r\n          </p>\r\n        ) : (\r\n          <WeatherInfo data={weatherData} />\r\n        )}\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default WeatherContainer;\r\n","const MY_KEY = '64bbf59ab3685a8222d7d1c819e673a5'\r\n\r\nexport {MY_KEY}","import React from 'react';\nimport '../styles/App.css';\nimport WeatherContainer from './WeatherContainer';\n\nfunction App() {\n  return (\n    <section className=\"app-container\">\n      <WeatherContainer/>\n    </section>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}